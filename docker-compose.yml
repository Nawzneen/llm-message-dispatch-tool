version: "3.8"

networks:
  default:
  sonar-net:

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    networks:
      - default
    ports:
      - "8080:8080"
    volumes:
    - ./frontend/src:/app/src
    - /node_modules
    environment:
      - HOST=0.0.0.0
      - PORT=8080
      - BACKEND_URL=http://localhost:3000
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend
    restart: always

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    networks:
      - default
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DB_USERNAME=admin
      - DB_PASSWORD=password
      - DB_HOST=mongodb
      - DB_PORT=27017
      - DB_NAME=sqa
      - PORT=3000
      - OLLAMA_HOST=http://ollama:11434
    restart: unless-stopped

  ollama:
    image: ollama/ollama:latest
    ports:
      - "11437:11434"
    networks:
      - default
    environment:
      - NODE_ENV=production
      - OLLAMA_DIR=/root/.ollama
      - OLLAMA_NUM_THREADS=8
      - OLLAMA_MAX_LOADED_MODELS=2
      - OLLAMA_MODEL_DISK_CACHE=true
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    volumes:
      - /mnt/c/Users/<username>/.ollama/models:/root/.ollama/models

  mongodb:
    image: mongo:latest
    restart: always
    ports:
      - "27017:27017"
    networks:
      - default
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongo_data:/data/db

  sonarqube:
    image: sonarqube:community
    container_name: sonarqube
    ports:
      - "9000:9000"
    environment:
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
      - SONARQUBE_ADMIN_USERNAME=admin
      - SONARQUBE_ADMIN_PASSWORD=admin
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    networks:
      - sonar-net

  codescene:
    image: codescene/codescene:latest
    ports:
      - 3003:3003
    networks:
      - default
    volumes:
      - codescene:/codescene
      
volumes:
  mongo_data:
    driver: local
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  codescene: